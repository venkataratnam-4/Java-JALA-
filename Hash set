import java.util.HashSet;
import java.util.Iterator;

public class HashSetExample {
    public static void main(String[] args) {
        
        HashSet<String> set = new HashSet<>();

       
        set.add("Apple");
        set.add("Banana");
        set.add("Cherry");
        set.add("Date");
        set.add("Elderberry");
        set.add("Fig");
        set.add("Grape");
        set.add("Honeydew");
        set.add("Indian Fig");
        set.add("Jackfruit");

       
        set.add("Kiwi");

      
        boolean contains = set.contains("Banana");
        System.out.println("Does the set contain 'Banana'? " + contains);

    
        set.remove("Fig");
        System.out.println("Set after removing 'Fig': " + set);

   
        boolean isEmpty = set.isEmpty();
        System.out.println("Is the HashSet empty? " + isEmpty);

       
        System.out.println("Size of the HashSet: " + set.size());

    
        System.out.println("Iterating through the HashSet using Iterator:");
        Iterator<String> iterator = set.iterator();
        while (iterator.hasNext()) {
            System.out.println(iterator.next());
        }

   
        set.clear();
        System.out.println("HashSet after clearing all elements: " + set);

   
        set.add("Apple");
        set.add("Banana");
        set.add("Cherry");
        set.add("Date");

    
        contains = set.contains("Apple");
        System.out.println("Does the set contain 'Apple' after clearing? " + contains);

      
        isEmpty = set.isEmpty();
        System.out.println("Is the HashSet empty after clearing and re-adding elements? " + isEmpty);

  
        System.out.println("All elements in the HashSet: " + set);
    }
}
